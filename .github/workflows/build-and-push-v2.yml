# Linted workflow for GitHub Actions - triggers workflow_dispatch button
name: build-and-push-ai-ml

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: true
        type: choice
        options:
          - dev
          - prd
      service:
        description: "ECS Service to build for"
        required: true
        type: choice
        options:
          - alert-ingestion
          - anomaly-detection-dev
          - context-fetcher

jobs:
  # version-bump:
  #   uses: ./.github/workflows/version-bump-v2.yml
  #   with:
  #     pr-title: ${{ github.event.pull_request.title || '' }}
  #     branch-name: ${{ github.ref_name }}
  #     run-number: ${{ github.run_number }}
  #   secrets: inherit

  build:
    runs-on: ubuntu-latest
    # needs: version-bump

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment and service
        run: |
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          echo "SERVICE=${{ github.event.inputs.service }}" >> $GITHUB_ENV
          echo "Selected Environment: ${{ github.event.inputs.environment }}"
          echo "Selected Service: ${{ github.event.inputs.service }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Run Trivy FS scan
        id: trivy-fs
        uses: aquasecurity/trivy-action@v0.25.1
        with:
          scan-type: fs
          scan-ref: .
          format: table
          output: trivy-fs-report.txt
          exit-code: 0
          vuln-type: os,library

      # - name: Set VERSION from version-bump
      #   run: |
      #     echo "VERSION=${{ needs.version-bump.outputs.new-version }}" >> $GITHUB_ENV
      #     echo "VERSION_FILE=${{ needs.version-bump.outputs.version-file }}" >> $GITHUB_ENV
      #     echo "Selected Version: ${{ env.VERSION }}"
      
      - name: Set VERSION manually
        run: |
          echo "VERSION=v1.0.0.${{ github.run_number }}" >> $GITHUB_ENV
          echo "VERSION_FILE=v1.0.0" >> $GITHUB_ENV
          echo "Selected Version: ${{ env.VERSION }}"

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image
        run: |
          if [ "${{ env.ENVIRONMENT }}" = "prd" ]; then
            ECR_REPO=${{ secrets.PRD_ECR_REPO }}
          else
            ECR_REPO=${{ secrets.DEV_ECR_REPO }}
          fi

          SERVICE=${{ env.SERVICE }}
          IMAGE=$ECR_REPO/$SERVICE:${{ env.VERSION }}
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

          echo "ðŸ›  Building Docker image for $SERVICE"
          docker build -t $IMAGE .
          docker push $IMAGE

      - name: Run Trivy Image scan
        id: trivy-image
        uses: aquasecurity/trivy-action@v0.25.1
        with:
          image-ref: ${{ env.IMAGE }}
          format: table
          output: trivy-image-report.txt
          exit-code: 0
          vuln-type: os,library

      - name: Notify Slack
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            STATUS_EMOJI=":white_check_mark:"
            STATUS_TEXT="SUCCESS"
          else
            STATUS_EMOJI=":x:"
            STATUS_TEXT="FAILED"
          fi

          MESSAGE="$STATUS_EMOJI *Build $STATUS_TEXT* for *${{ env.SERVICE }}*  
          Environment: ${{ env.ENVIRONMENT }}  
          Version: ${{ env.VERSION }}  
          Image: ${{ env.IMAGE }}  
          Trigger: ${{ github.event_name }}  
          Branch: ${{ github.ref_name }}"

          curl -F "text=$MESSAGE" \
               -F "channel=${{ secrets.SLACK_CHANNEL }}" \
               -F "file=@trivy-fs-report.txt" \
               -F "file=@trivy-image-report.txt" \
               -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
               https://slack.com/api/files.upload
